# https://doc.rust-lang.org/cargo/reference/manifest.html
# ==============================================================================

[package]
name = "revela"
description = "A modular user interface abstracted over multiple backends."
version = "0.1.0-wip"
edition = "2021"
rust-version = "1.81.0" # sync with README.md, .github/workflows/check.yml
authors = ["Jos√© Luis Cruz <joseluis@andamira.net>"]
repository = "https://github.com/andamira/revela"
documentation = "https://docs.rs/revela"
license = "MIT OR Apache-2.0"
include = [
	"/Cargo.toml",
	"/README.md",
	"/LICENSE-*",
	"/src/**/*.rs",
	"/src/**/*.md",
]
categories = ["gui", "accesibility", "multimedia", "api-bindings", "no-std::no-alloc"]
keywords = ["terminal"]
publish = true


[features] # 36 (300 max)
# ==============================================================================
# Features are grouped in the following categories:
# - Miscellaneous
# - Environment
# - Module
# - OS
# - Safety
# - Nightly
# - Capability
# - Dependencies
#
# Sintax:
# - ["name"]: Normal public-facing features.
# - ["_name"]: Hidden extra capability features.
# - ["__name"]: Hidden miscellaneous features.
#
# Features are in sync with: src/_info/features.md


#* Miscellaneous features *#
# ------------------------------------------------------------------------------

# default = []

# __dbg = [] # for debugging purposes, shows enabled features
__notest = [] # allows excluding examples from being tested


#* Environment features *#
# ------------------------------------------------------------------------------

std = [ # enables features that depend on the standard library
	"alloc",
	"devela/std",
]
alloc = [ # enables features that depend on allocation
	"devela/alloc",
]
no_std = [ # enables features incompatible with the standard library
	"devela/no_std",
]

#* Module features *#
# ------------------------------------------------------------------------------

all = [ # enables all the modules and submodules
	"audio", "color", "font", "gfx", "ui", "video",
	]
audio = []
color = []
font = []
gfx = []
ui = []
video = []


#* OS features *#
# ------------------------------------------------------------------------------

linux = []
web = []
windows = ["crossterm?/windows"]
term =  []


#* Safety features *#
# ------------------------------------------------------------------------------
# IMPROVE: allow to enable separately safety features from devela and revela.

safe = [] # forbids unsafe at the crate level
safest = [ "safe", "devela/safe" ] # forbids unsafe recursively
unsafest = [ "unsafe", "devela/unsafe" ] # enables unsafe recursively

unsafe = [ # enables all the unsafe features at the crate level
	"unsafe_array", "unsafe_async", "unsafe_const", "unsafe_dyn",
	"unsafe_niche", "unsafe_ptr", "unsafe_slice", "unsafe_str",
	]
	# devela's unsafe features (v0.21.0)
	unsafe_array = ["devela/unsafe_array"] # faster array initialization.
	unsafe_async = ["devela/unsafe_async"] # custom task waker, coroutine impls.
	unsafe_const = ["devela/unsafe_const"] # extra const methods.
	unsafe_dyn = ["devela/unsafe_dyn"] # DSTs in the stack, no_std Error dyn impls.
	unsafe_niche = ["devela/unsafe_niche"] # unchecked niche constructors.
	unsafe_ptr = ["devela/unsafe_ptr"] # pop methods without Clone.
	unsafe_slice = ["devela/unsafe_slice"] # extra slice methods, avoid bound checks.
	unsafe_str = ["devela/unsafe_str"] # unchecked utf-8 char and &str conversions.


#* Nightly features *#
# ------------------------------------------------------------------------------

nightly = [ # enables nightly features
	"devela/nightly",
]
	# devela's nightly features (v0.21.0)
	nightly_coro= ["devela/nightly_coro"] # coroutines, coroutine_trait, iter_from_coroutine
	nightly_doc = ["devela/nightly_doc"] # doc_cfg, doc_notable_trait
	nightly_simd = ["devela/nightly_simd"] # portable_simd
	nightly_stabilized = ["devela/nightly_stabilized"] # stabilized features to be released soon


#* Capability features *#
# ------------------------------------------------------------------------------
# These features are prefixed with an underscore (_) and therefore semi-hidden.

# The most complete versions of the documentation:
_docsrs_stable = ["std", "unsafe", "dep_std"]
_docsrs = ["_docsrs_stable", "nightly"]


#* Dependencies features *#
# ------------------------------------------------------------------------------

dep_std = [ # enables all the backends compatible with "std"
	"std",
	"crossterm", "miniquad", # "notcurses",
	# "macroquad", # "notan",
	# "libc", "sdl2", "gilrs", "midir", "kira",
]
dep_alloc = [ # enable all the backends compatible with "alloc"
	"alloc",
	# "no_std", "libc", "tiny-skia",
]
dep_no_std = [ # enable all the backends compatible with "no_std"
	"no_std",
	# "libc", "tiny-skia",
]

#* features automatically enabled by optional dependencies *#

crossterm = ["dep:crossterm", "std"]
# macroquad = ["dep:macroquad", "std"]
miniquad = ["dep:miniquad"]
# notcurses = ["dep:notcurses"]
# notan = ["dep:notan", "std"]
# sdl2 = ["dep:sdl2", "std", "acolor/sdl2", "raw-window-handle"]
# midir = ["dep:midir", "std", "flume"]


[dependencies]
# ==============================================================================

[dependencies.devela]
# version = "0.21.0"
path = "../devela"
default-features = false


# system
# ------------------------------------------------------------------------------

# [dependencies.libc]
# version = "0.2.140"
# optional = true
# default-features = false

# [dependencies.libc-print]
# version = "0.1.21"
# optional = true

# [dependencies.linked_list_allocator]
# version = "0.10.5"
# optional = true

# windowing
# ------------------------------------------------------------------------------

[dependencies.miniquad]
version = "0.4.5"
optional = true
default-features = false

# [dependencies.macroquad]
# version = "0.4.5"
# optional = true
# default-features = false

# [dependencies.notan]
# version = "0.12.0"
# optional = true
# default-features = false

# [dependencies.raw-window-handle]
# version = "0.5.0" # latest = 0.6.0, in sdl2: 0.5.0
# optional = true

# [dependencies.sdl2]
# version = "0.36.2"
# optional = true
# default-features = false
# features = ["raw-window-handle", "gfx"]

# graphics
# ------------------------------------------------------------------------------

# [dependencies.png] # needs-std
# version = "0.17.8"
# optional = true

# [dependencies.tiny-skia]
# version = "0.11.1"
# optional = true
# default-features = false

# terminal
# ------------------------------------------------------------------------------

[dependencies.crossterm]
version = "0.27.0"
optional = true
default-features = false
features = ["events", "bracketed-paste"]

# [dependencies.notcurses]
# version = "3.5.0"
# path = "../../notcurses/notcurses-rs"
# optional = true
# default-features = false

# gamepads
# ------------------------------------------------------------------------------

# [dependencies.gilrs]
# version = "0.10.2"
# default-features = false

# audio
# ------------------------------------------------------------------------------

# [dependencies.kira]
# version = "0.8.4"
# optional = true
# default-features = false

# midi
# ------------------------------------------------------------------------------

# [dependencies.midir]
# version = "0.9.1"
# optional = true
# default-features = false

# [dependencies.flume]
# version = "0.11.0"
# optional = true
# default-features = false

# [dependencies.midi-convert]
# version = "0.1.3" # TODO 0.2.0
# default-features = false


[dev-dependencies]
# ------------------------------------------------------------------------------


[package.metadata.docs.rs]
# ------------------------------------------------------------------------------
no-default-features = true
features = ["_docsrs"]

[badges]
# ------------------------------------------------------------------------------
maintenance = { status = "experimental" }


# profiles
# ==============================================================================

[profile.dev]
split-debuginfo = "packed"

[profile.release]
strip = "debuginfo"

[profile.no_std]
inherits = "dev"
lto = true
opt-level = "s" # "z"
panic = "abort"
# overflow-checks = true
# debug-assertions = true

[profile.no_std-release]
inherits = "release"
lto = true
opt-level = "s" # "z"
panic = "abort"
codegen-units = 1
strip = true
# overflow-checks = false
# debug-assertions = false
